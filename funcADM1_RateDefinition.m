function funcRate = funcADM1_RateDefinition
% ADM1: Definition of rate equations

func.Monod        = @(S, IN, xx) xx.k.m * S/(xx.KS + S) * IN/(xx.KIN + IN);
func.S_Inhibit    = @(S, xx)              1/(1 + S/xx.KIS);
func.S_Compete    = @(S1,S2)              1/(1 + S1/S2);

% Inhibition functions as per the original ADM1
% func.pH_Inhibit1  = @(pH, xx)  (  1 + 2*10^(0.5*(xx.pH.LL - xx.pH.HL))  ) ...
%                                  / (  1 + 10^(pH - xx.pH.HL) + 10^(xx.pH.LL - pH)  );
% func.pH_Inhibit2  = @(pH, xx)   (pH <  xx.pH.HL) * exp( -3*( (pH - xx.pH.HL)/(xx.pH.HK - xx.pH.LL) )^2 ) ...
%                                    + (pH >= xx.pH.HL);
%
% Inhibition function as per BSM2
func.na         = @(xx)     (3 / (xx.pH.UL - xx.pH.LL));
func.KpH        = @(xx)     (10^-((xx.pH.LL + xx.pH.UL)/2));
func.pH_Inhibit = @(pH, xx)     func.KpH(xx).^func.na(xx) ...
                            / ( (10.^-pH).^func.na(xx) + func.KpH(xx).^func.na(xx) );

func.Hydro   = @(X, k) k*X;
                            
func.Uptake.su  = @(S, X, pH, su)  func.Monod(S.su, S.IN, su) * X.su ...
                                  *func.pH_Inhibit(pH, su);
func.Uptake.aa  = @(S, X, pH, aa)  func.Monod(S.aa, S.IN, aa) * X.aa ...
                                  *func.pH_Inhibit(pH, aa);

func.Uptake.fa  = @(S, X, pH, fa)  func.Monod(S.fa, S.IN, fa) * X.fa ...
                                  *func.pH_Inhibit(pH, fa)          ...
                                  *func.S_Inhibit(S.h2, fa);

func.Uptake.va  = @(S, X, pH, va)  func.Monod(S.va, S.IN, va) * X.c4 ...
                                  *func.S_Compete(S.bu, S.va)        ...
                                  *func.pH_Inhibit(pH, va)          ...
                                  *func.S_Inhibit(S.h2, va);
func.Uptake.bu  = @(S, X, pH, bu)  func.Monod(S.bu, S.IN, bu) * X.c4 ...
                                  *func.S_Compete(S.va, S.bu)        ...
                                  *func.pH_Inhibit(pH, bu)          ...
                                  *func.S_Inhibit(S.h2, bu);

func.Uptake.pro = @(S, X, pH, pro) func.Monod(S.pro, S.IN, pro)* X.pro ...
                                  *func.pH_Inhibit(pH, pro)          ...
                                  *func.S_Inhibit(S.h2, pro);

func.Uptake.ac  = @(S, X, pH, ac, KA)  func.Monod(S.ac, S.IN, ac)* X.ac ...
                                      *func.pH_Inhibit(pH, ac)          ...
                                      *func.S_Inhibit(S.IN*(1 - (10^-pH)/(KA + 10^-pH)), ac);

func.Uptake.h2  = @(S, X, pH, h2)  func.Monod(S.h2, S.IN, h2)* X.h2 ...
                                  *func.pH_Inhibit(pH, h2);

func.Decay = @(X, k) k*X;

func.Transfer = @(Sliq, Sgas, KLA, KH, R, T) KLA*(Sliq - KH*R*T*Sgas);

funcRate = @(S, X, pH, P) [func.Hydro(X.c,  P.k.hyd.c);      ...
                           func.Hydro(X.ch, P.k.hyd.ch);     ...
                           func.Hydro(X.pr, P.k.hyd.pr);     ...
                           func.Hydro(X.li, P.k.hyd.li);     ...
                           func.Uptake.su(S, X, pH, P.su);   ... 
                           func.Uptake.aa(S, X, pH, P.aa);   ...
                           func.Uptake.fa(S, X, pH, P.fa);   ...
                           func.Uptake.va(S, X, pH, P.va);   ...
                           func.Uptake.bu(S, X, pH, P.bu);   ...
                           func.Uptake.pro(S, X, pH, P.pro); ...
                           func.Uptake.ac(S, X, pH, P.ac, P.KA.NH4);   ...
                           func.Uptake.h2(S, X, pH, P.h2);   ...
                           func.Decay(X.su,  P.su.k.dec);    ...
                           func.Decay(X.aa,  P.aa.k.dec);    ...
                           func.Decay(X.fa,  P.fa.k.dec);    ...
                           func.Decay(X.c4,  P.va.k.dec);    ...
                           func.Decay(X.pro, P.pro.k.dec);   ...
                           func.Decay(X.ac,  P.ac.k.dec);    ...
                           func.Decay(X.h2,  P.h2.k.dec);    ...
                           func.Transfer(S.ch4, S.ch4g, P.Process.KLA, P.KH.ch4, P.Amb.R, P.Amb.T); ...
                           func.Transfer(S.IC*(1 - P.KA.IC/(P.KA.IC + 10^-pH)), ...
                                                S.co2g, P.Process.KLA, P.KH.co2, P.Amb.R, P.Amb.T); ...
                           func.Transfer(S.h2,  S.h2g,  P.Process.KLA, P.KH.h2,  P.Amb.R, P.Amb.T)];
                       